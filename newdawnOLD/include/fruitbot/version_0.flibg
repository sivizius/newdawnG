fbc0@@version                           =                                       0xc0fb
;( types )
;{
  fbc0@@tNothing                        =                                       0x00                                    ;empty operant
  fbc0@@tConstant                       =                                       0x01                                    ;value                is a constant value
  fbc0@@tString                         =                                       0x02                                    ;operant              is a constant string
  fbc0@@tAddress                        =                                       0x03                                    ;value                is at address=value
  fbc0@@tBuffer                         =                                       0x04                                    ;buffer/string        may lie at address=value
  fbc0@@tPointer                        =                                       0x05                                    ;value/buffer/string  is at an address pointed by address
  fbc0@@tVariable                       =                                       0x06                                    ;operant              is some kind of highlevel variable of fixed size
  fbc0@@tRegister                       =                                       0x07                                    ;operant              is a register
  fbc0@@tFunction                       =                                       0x08                                    ;operant              is a function
  fbc0@@tArgument                       =                                       0x09                                    ;an argument comes after this
  fbc0@@tTreeNode                       =                                       0x0a                                    ;its a tree-node
  fbc0@@tOperator                       =                                       0x0b                                    ;its a operator
  fbc0@@tStack                          =                                       0x0c                                    ;value is in the stack
  fbc0@@tUnknown                        =                                       0xff                                    ;unknown operant, should cause an fatal error!
;}
macro code                              language
  local fbc0@@lblString, fbc0@@ptrString, fbc0@@lenString
  local fbc0@@lblCode, fbc0@@lenCode, fbc0@@ptrMain
  local fbc0@@uf4Token
  macro fbc0@@killMySelf
    purge fbc0@@instruction, fbc0@@operantByte, fbc0@@operantWord, fbc0@@operantDWord, fbc0@@operantQWord, fbc0@@operantString, fbc0@@addString
  end macro
  macro fbc0@@instruction               opcode*
    db                                  opcode
  end macro
  macro fbc0@@operantByte               value*
    db                                  value
  end macro
  macro fbc0@@operantWord               value*
    dw                                  value
  end macro
  macro fbc0@@operantDWord              value*
    dd                                  value
  end macro
  macro fbc0@@operantQWord              value*
    dq                                  value
  end macro
  macro fbc0@@operantString             string*
    local char
    virtual                             at null
      DB                                string
      store                             word ( $ )                              at   fbc0@@uf4Token.lblMagic:( fbc0@@lblString + fbc0@@uf4Token.lblContent + fbc0@@ptrString )
      repeat ( $ ), offs:0
        load                            char byte                               from ( offs )
        store                           byte char                               at   fbc0@@uf4Token.lblMagic:( fbc0@@lblString + fbc0@@uf4Token.lblContent + fbc0@@ptrString + 2 + offs )
      end repeat
      dq                                ( fbc0@@lblString + fbc0@@ptrString + 2 )
      fbc0@@ptrString                   =                                       ( fbc0@@ptrString + 2 + $ )
    end virtual
  end macro
  struc fbc0@@getToken
    .lenString                          =                                       fbc0@@lenString
  end struc
  import 'fruitbot/assembly'
  match , language
    display '[asm:fbc0] warn: default language is assembler.', 10
  else match =assembler, language
  else match + =yasic, hazYasic language
    display '[asm:fbc0] yet another symbolic instruction code!', 10
    yasic@@newSpace
    macro fbc0@@killMySelf
      fbc0@@killMySelf
      yasic@@endSpace
    end macro
  else
    err 10, '[asm:fbc0] unknown language »', `language, '«'
  end match
  fbc0@@uf4Token                        uf4@@getLayer
  fbc0@@ptrString                       =                                       ( null )
  fbc0@@lblString                       uf4@@allocateLayer                      ( fbc0@@lenString )
  fbc0@@lblCode                         uf4@@allocateLayer                      ( null )
  uf4@@newLayer                                                                 ;<code>
    lbl                                 __main__
    uf4@@newLayer
      call                              ( fbc0@@ptrMain + fbc0@@lenString )
      stop
    uf4@@endLayer
  macro end?.code!
    local temp
    stop
    temp                                uf4@@endLayer                           ;</code>
    fbc0@@lenString                     =                                       ( fbc0@@ptrString )
    fbc0@@ptrMain                       =                                       ( temp - fbc0@@lenString )
    fbc0@@killMySelf
    temp                                uf4@@allocateLayer                      ( null )
    temp                                =                                       ( temp - fbc0@@lblCode )
    if ( fbc0@@lenString )
      uf4@@addYapterD                   fbc0@@yStrings,     null,               fbc0@@lenString,    fbc0@@lblString,    null
    end if
    uf4@@addYapterD                     fbc0@@yBytecode,    fbc0@@version,      temp,               fbc0@@ptrMain,      fbc0@@lblCode
    purge fbc0@@killMySelf, end?.code
  end macro
end macro
fbc0@@yStrings  uf4@@addUnlistedYapterType
fbc0@@yBytecode uf4@@addUnlistedYapterType
