INCLUDE 'include/main.flibg'
INCLUDE 'include/format.flibg'
INCLUDE 'include/display.flibg'
INCLUDE 'include/fruitbot/version_0.flibg'
INCLUDE 'include/fruitbot/assembly.flibg'
disasm@@ptrStringYapter                 =                                       null
disasm@@lenStringYapter                 =                                       null
MACRO disasm@@buildYapter               address,  type,     size,     resv,     misc,     pointer,  dword0,   dword1,   dword2,   lblInputFile
  IF      ( type = null )
    disasm@@ycontent                    =                                       ( address + 16 )
    BREAK
  ELSE IF ( type = fbc0@@yBytecode )
  ELSE IF ( type = fbc0@@yStrings )
    disasm@@ptrStringYapter             =                                       ( dword1 + disasm@@ycontent )
    disasm@@lenStringYapter             =                                       dword0
    displayValue '*0x', disasm@@ptrStringYapter
  ELSE
    ERR 10, '[asm:disasm] fail: unknown yapter-type'
  END IF
END MACRO
MACRO disasm@@loadYapter                address,  type,     size,     resv,     misc,     pointer,  dword0,   dword1,   dword2,   lblInputFile
  LOCAL offs, lenght, char
  IF      ( type = null )
    BREAK
  ELSE IF ( type = fbc0@@yBytecode )
    db '<code>', 10
    IF ( size = fbc0@@version )
      displayValue 'size 0x', dword0
      displayValue 'code 0x', dword2
      displayValue 'main 0x', dword1
      fbc0@@disassemble                 lblInputFile,                           ( dword2 + disasm@@ycontent ),          dword0,   dword1
    END IF
  ELSE IF ( type = fbc0@@yStrings )
    db '<strings>', 10
    offs                                =                                       null
    WHILE true
      IF (( dword0 - offs ) < 2 )
        BREAK
      END IF
      LOAD                              lenght word                             FROM lblInputFile:( disasm@@ptrStringYapter + offs )
      IF (( dword0 - offs - 2 ) < lenght )
        ERR 10, '[asm:disasm] corrupted string-yapter'
      END IF
      db                                '  *0x'
      hq                                ( offs + 2 )
      db                                ' (0x'
      hw                                lenght
      db                                '): »'
      REPEAT ( lenght )
        LOAD                            char byte                               FROM lblInputFile:( disasm@@ptrStringYapter + offs + 2 + % - 1 )
        db                              char
      END REPEAT
      db                                '«', 10
      offs                              =                                       ( offs + lenght + 2 )
    END WHILE
  END IF
END MACRO

uf4@@parseFile                          disasm@@theInputFile,                   disasm@@buildYapter,                    disasm@@LOADYapter