;    local lstExpression, charExpression, restExpression, temp
;    define                              lstExpression                           theExpression
;    while 1
;      match charExpression restExpression, lstExpression
;        define                          lstExpression                           restExpression
;        yasic@@parseChar                charExpression
;      else
;        match any, lstExpression
;          yasic@@parseChar              any
;        end match
;        break
;      end match
;    end while
Macro yasic@@pushExpression             expression*
  yasic@@parseExpression                expression
  yasic@@displayExpression
  yasic@@optimiseExpression
  yasic@@displayExpression
  yasic@@compileExpression
End Macro
Macro yasic@@newType                    theType*,                               theSize*
  Macro theType                         declaration&
    Match                               varName =( theParameters =),            declaration                   ;<function>
    Else Match                          varName == anExpression,                declaration                   ;<variables>
      Match                             +,                                      yasic@@global
        display 'global:  ', `theType, ': ', `varName, ' = ', `anExpression, ';', 10
        Macro varName                   value*
          Local expression
          Match                         == expression,                          value
            display 'let ', `varName, ' equal to ', `expression, 10
          Else Match                    +== expression,                         value
            display 'let ', `varName, ' equal to ', `varName, ' + ( ', `expression, ' )', 10
           Else
            err 10, '[asm:yasic] invalid assign'
          End Match
        End Macro
      Else Match                        -,                                      yasic@@global
        display '  local: ', `theType, ': ', `varName, ' = ', `anExpression, ';', 10
        displayValue '  ctr 0x', .#theType#_ctrVars
    ;displayValue 'num data 0x', .qword_ctrData
        .var#varName#_value             =                                       ( .#theType#_ctrVars )
        .#theType#_ctrVars              =                                       ( .#theType#_ctrVars + 1 )
        ;displayValue 'base: 0x', .
        Macro varName                   value*
          Local expression
          Match                         == expression,                          value
            display '  let ', `varName, ' equal to »', `expression, '«', 10
            yasic@@parseExpression      expression
            yasic@@displayExpression
            yasic@@compileExpression
            display 10
            pushConstant                yasic@@#theType#_theID
            pushConstant                .var#varName#_value
            let
          Else Match                    +== expression,                         value
            display '  let ', `varName, ' equal to ', `varName, ' + ( ', `expression, ' )', 10
          Else
            err 10, '[asm:yasic] invalid assign'
          End Match
        End Macro
        Macro yasic@@killLocalStuff
          yasic@@killLocalStuff
          Purge varName
        End Macro
      End Match
    End Match
    content
  End Macro
End Macro

