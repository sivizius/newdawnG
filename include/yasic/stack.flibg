macro yasic@@push                       type*,              value*,             size:0,             misc:0
  ;display 'push', 10
  ;displayValue '  type  0x', type
  ;displayValue '  misc  0x', misc
  ;displayValue '  size  0x', size
  ;displayValue '  value 0x', value
  ;displayValue '  *ptr  0x', yasic@@ptrStack
  if ( yasic@@ptrStack >= yasic@@lenStack )
    err 10, '[asm:yasic] stack to small. adjust yasic@@lenStack'
  end if
  store                                 word  type                              at yasic@@lblStack:( yasic@@ptrStack + 0x00 )
  store                                 word  misc                              at yasic@@lblStack:( yasic@@ptrStack + 0x02 )
  store                                 dword size                              at yasic@@lblStack:( yasic@@ptrStack + 0x04 )
  store                                 qword value                             at yasic@@lblStack:( yasic@@ptrStack + 0x08 )
  yasic@@ptrStack                       =                                       ( yasic@@ptrStack + 16 )
end macro
struc yasic@@peek                       offs:0
  if ( yasic@@ptrStack < null )
    err 10, '[asm:yasic] stack is empty'
  end if
  local type, misc, size, value
  load                                  type  word                              from yasic@@lblStack:( yasic@@ptrStack - ( 16 * offs ) + 0x00 )
  load                                  misc  word                              from yasic@@lblStack:( yasic@@ptrStack - ( 16 * offs ) + 0x02 )
  load                                  size  dword                             from yasic@@lblStack:( yasic@@ptrStack - ( 16 * offs ) + 0x04 )
  load                                  value qword                             from yasic@@lblStack:( yasic@@ptrStack - ( 16 * offs ) + 0x08 )
  .type                                 =                                       type
  .misc                                 =                                       misc
  .size                                 =                                       size
  .value                                =                                       value
end struc
struc yasic@@pop
  ;display 'pop', 10
  local temp
  yasic@@ptrStack                       =                                       ( yasic@@ptrStack - 16 )
  temp                                  yasic@@peek
  .type                                 =                                       temp.type
  .misc                                 =                                       temp.misc
  .size                                 =                                       temp.size
  .value                                =                                       temp.value
  ;displayValue '  type  0x', temp.type
  ;displayValue '  misc  0x', temp.misc
  ;displayValue '  size  0x', temp.size
  ;displayValue '  value 0x', temp.value
  ;displayValue '  *ptr  0x', yasic@@ptrStack
end struc
macro yasic@@unstackToQueque
  local type, misc, size, value
  while ( yasic@@topStack < yasic@@ptrStack )
    load                                type  word                              from yasic@@lblStack:( yasic@@topStack + 0x00 )
    load                                misc  word                              from yasic@@lblStack:( yasic@@topStack + 0x02 )
    load                                size  dword                             from yasic@@lblStack:( yasic@@topStack + 0x04 )
    load                                value qword                             from yasic@@lblStack:( yasic@@topStack + 0x08 )
    yasic@@topStack                     =                                       ( yasic@@topStack + 16 )
    yasic@@enque                        type,     value,     size,     misc
  end while
end macro
