Include 'include/fruitbot/opcodes.flibg'
Macro pushByte                          value*
  ;displayValue 'pushByte 0x', value
  fbc0@@instruction                     fbc0@@opPushByte
  fbc0@@operantByte                     value
End Macro
Macro pushWord                          value*
  ;displayValue 'pushWord 0x', value
  fbc0@@instruction                     fbc0@@opPushWord
  fbc0@@operantWord                     value
End Macro
Macro pushDWord                         value*
  ;displayValue 'pushDWord 0x', value
  fbc0@@instruction                     fbc0@@opPushDWord
  fbc0@@operantDWord                    value
End Macro
Macro pushQWord                         value*
  ;displayValue 'pushQWord 0x', value
  fbc0@@instruction                     fbc0@@opPushQWord
  fbc0@@operantQWord                    value
End Macro
Macro pushConstant                      value*
  ;displayValue 'pushConstant 0x', value
  If      (( value >= -( 1 shl  7 )) & ( value < ( 1 shl  7 )))
    pushByte                            value
  Else If (( value >= -( 1 shl 15 )) & ( value < ( 1 shl 15 )))
    pushWord                            value
  Else If (( value >= -( 1 shl 31 )) & ( value < ( 1 shl 31 )))
    pushDWord                           value
  Else
    pushQWord                           value
  End If
End Macro
Macro add                               ignore
  fbc0@@instruction                     fbc0@@opAdd
End Macro
Macro sub                               ignore
  fbc0@@instruction                     fbc0@@opSub
End Macro
Macro mul                               ignore
  fbc0@@instruction                     fbc0@@opMul
End Macro
Macro div                               ignore
  fbc0@@instruction                     fbc0@@opDiv
End Macro
Macro mod                               ignore
  fbc0@@instruction                     fbc0@@opMod
End Macro
Macro let                               ignore
  fbc0@@instruction                     fbc0@@opLet
End Macro
Macro stop                              ignore
  fbc0@@instruction                     fbc0@@opStop
End Macro
Macro call                              address*
  Local temp
  temp                                  fbc0@@getToken
  pushConstant                          ( address - temp.lenString )
  fbc0@@instruction                     fbc0@@opCall
End Macro
fbc0@@lenFunctionHeader                 =                                       32
fbc0@@offFunctionInstruction            =                                       0x00
fbc0@@offFunctionPadByte                =                                       0x01
fbc0@@offFunctionSize                   =                                       0x02
fbc0@@offFunctionReturnType             =                                       0x04
fbc0@@offFunctionNumArguments           =                                       0x06
fbc0@@offFunctionMyName                 =                                       0x08
fbc0@@offFunctionPadDWord               =                                       0x0c
fbc0@@offFunctionBlankAddress           =                                       0x10
fbc0@@offFunctionPadQWord               =                                       0x18
Macro fbc0@@function                    myName*,            lenFunction*,       returnType*,        numArguments*
  Local temp
  db                                    fbc0@@opFunction
  db                                    0                                       ;not used yet
  dw                                    lenFunction                             ;size of function
  dw                                    returnType                              ;type of return value
  dw                                    numArguments                            ;number of arguments. it does not matter which type or size they have.
  temp fbc0@@operantString              myName
  dd                                    temp                                    ;name of function
  dd                                    0                                       ;not used yet
  dq                                    0x0310961942233713                      ;can be used by compiler to save address of corresponding machine-code
  db                                    '01234567'                              ;not used yet
End Macro
Macro allocGlobal                       ignore
  fbc0@@instruction                     fbc0@@opAllocGlobal
End Macro
Macro allocLocal                        ignore
  fbc0@@instruction                     fbc0@@opAllocLocal
End Macro
Macro allocate                          ignore
  fbc0@@instruction                     fbc0@@opAllocate
End Macro
Macro when                              address*
  Local temp
  temp                                  fbc0@@getToken
  pushConstant                          ( address - temp.lenString )
  fbc0@@instruction                     fbc0@@opWhen
End Macro
Macro next                              address*
  Local temp
  temp                                  fbc0@@getToken
  pushConstant                          ( address - temp.lenString )
  fbc0@@instruction                     fbc0@@opNext
End Macro
Macro loop                              address*
  Local temp
  temp                                  fbc0@@getToken
  pushConstant                          ( address - temp.lenString )
  fbc0@@instruction                     fbc0@@opLoop
End Macro
Macro break
  fbc0@@instruction                     fbc0@@opBreak
End Macro
Macro done
  fbc0@@instruction                     fbc0@@opDone
End Macro
Macro fbc0@@killMySelf
  Purge pushByte, pushWord, pushDWord, pushQWord
  Purge add, sub, mul, div, mod
End Macro

